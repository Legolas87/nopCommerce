@model BackInStockSubscribeModel
<div class="page back-in-stock-subscription-page">
    <div class="page-title">
        <h1>
            @if (Model.AlreadySubscribed)
            {
                @await T("BackInStockSubscriptions.AlreadySubscribed")
            }
            else
            {
                @await T("BackInStockSubscriptions.PopupTitle")
            }
        </h1>
    </div>
    <div class="page-body">
        @if (!Model.SubscriptionAllowed)
            {
            <div>
                @await T("BackInStockSubscriptions.NotAllowed")
            </div>
        }
        else if (!Model.IsCurrentCustomerRegistered)
        {
            <div>
                @await T("BackInStockSubscriptions.OnlyRegistered")
            </div>
        }
        else if (!Model.AlreadySubscribed && Model.CurrentNumberOfBackInStockSubscriptions >= Model.MaximumBackInStockSubscriptions)
        {
            <div>
                @string.Format((await T("BackInStockSubscriptions.MaxSubscriptions")).Value, Model.MaximumBackInStockSubscriptions)
            </div>
        }
        else
        {
            if (!Model.AlreadySubscribed)
            {
                <div class="tooltip">@await T("BackInStockSubscriptions.Tooltip")</div>
            }
            <button type="submit" id="back-in-stock-notify-me" class="button-1 notify-me-button">
                @await T(Model.AlreadySubscribed ? "BackInStockSubscriptions.Unsubscribe" : "BackInStockSubscriptions.NotifyMe")
            </button>
            <nop-antiforgery-token />
            <script>
                $(document).ready(function () {
                    $("#back-in-stock-notify-me").on('click', function () {
                        var subscribeButton = this;
                        var postData = {};
                        addAntiForgeryToken(postData);
                        $.ajax({
                            cache: false,
                            type: "POST",
                            data: postData,
                            url: "@(Url.RouteUrl("BackInStockSubscribeSend", new { productId = Model.ProductId }))",
                            success: function (data, textStatus, jqXHR) {
                                $(subscribeButton).closest('.ui-dialog-content').dialog('destroy').remove();
                                location.reload();
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                alert('Failed to change subscription.');
                            }
                        });

                    });
                });
            </script>
        }
    </div>
</div>