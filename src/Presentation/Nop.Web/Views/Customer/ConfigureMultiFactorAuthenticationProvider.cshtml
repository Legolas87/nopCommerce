@model MultiFactorAuthenticationProviderModel

@using Nop.Core
@using Nop.Services.Customers
@inject IWorkContext workContext
@inject ICustomerService customerService

@{
    var isRegisterCustomer = await customerService.IsRegisteredAsync(await workContext.GetCurrentCustomerAsync());
    Layout = isRegisterCustomer ? "_ColumnsTwo" : "_ColumnsOne";

    //title
    NopHtml.AddTitleParts((await T("PageTitle.MultiFactorAuthentication")).Value);
    //page class
    NopHtml.AppendPageCssClassParts("html-account-page");
}

@if (isRegisterCustomer)
{
    @section left
    {
        @await Component.InvokeAsync(typeof(CustomerNavigationViewComponent), new { selectedTabId = CustomerNavigationEnum.MultiFactorAuthentication })
    }
}

<div class="page account-page multi-factor-authentication-config-page">
    <div class="page-title">
        @if (isRegisterCustomer)
        {
            <h1>@await T("PageTitle.MultiFactorAuthentication") - @Model.Name</h1>
        }
        else
        {
            <h1>@await T("PageTitle.MultiFactorAuthentication")</h1>
        }
    </div>
    <div class="page-body">
        <div class="configure-provider">
            @(await Component.InvokeAsync(Model.ViewComponent)) 
        </div>
    </div>
</div>