@model CampaignSearchModel

@{
    //page title
    ViewBag.PageTitle = (await T("Admin.Promotions.Campaigns")).Value;
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("Campaigns");
}

@{
    const string hideSearchBlockAttributeName = "CampaignPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}


<div class="content-header clearfix">
    <h1 class="float-left">
        @await T("Admin.Promotions.Campaigns")
    </h1>
    <div class="float-right">
        <a href="@Url.Action("Create")" class="btn btn-primary">
            <i class="fas fa-plus-square"></i>
            @await T("Admin.Common.AddNew")
        </a>
        @await Component.InvokeAsync(typeof(AdminWidgetViewComponent), new { widgetZone = AdminWidgetZones.CampaignListButtons, additionalData = Model })
    </div>
</div>

<section class="content">
    <div class="container-fluid">
    <div class="form-horizontal">
        <div class="cards-group">
            @*hide the entire search block if no elements are displayed*@
            <div class="card card-default card-search" @(Model.HideStoresList ? Html.Raw("style=\"display:none\"") : null)>
                <div class="card-body">
                    <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                        <div class="search-text">@await T("Admin.Common.Search")</div>
                        <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                        <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                    </div>

                    <div class="search-body @(hideSearchBlock ? "closed" : "")">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <div class="col-md-4">
                                        <nop-label asp-for="StoreId" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="StoreId" asp-items="Model.AvailableStores" />
                                    </div>
                                </div>                                
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-8 offset-md-4">
                                <button type="button" id="search-campaigns" class="btn btn-primary btn-search">
                                    <i class="fas fa-search"></i>
                                    @await T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card card-default">
                <div class="card-body">
                    <nop-doc-reference asp-string-resource="@await T("Admin.Documentation.Reference.EmailCampaigns", Docs.EmailCampaigns + Utm.OnAdmin)" />

                    @await Html.PartialAsync("Table", new DataTablesModel
                    {
                        Name = "campaigns-grid",
                        UrlRead = new DataUrl("List", "Campaign", null),
                        SearchButtonId = "search-campaigns",
                        Length = Model.PageSize,
                        LengthMenu = Model.AvailablePageSizes,
                        Filters = new List<FilterParameter>
                        {
                            new FilterParameter(nameof(Model.StoreId))
                        },
                        ColumnCollection = new List<ColumnProperty>
                        {
                            new ColumnProperty(nameof(CampaignModel.Name))
                            {
                                Title = (await T("Admin.Promotions.Campaigns.Fields.Name")).Value
                            },
                            new ColumnProperty(nameof(CampaignModel.CreatedOn))
                            {
                                Title = (await T("Admin.Promotions.Campaigns.Fields.CreatedOn")).Value,
                                Width = "200",
                                Render = new RenderDate()
                            },
                            new ColumnProperty(nameof(CampaignModel.DontSendBeforeDate))
                            {
                                Title = (await T("Admin.Promotions.Campaigns.Fields.DontSendBeforeDate")).Value,
                                Width = "200",
                                Render = new RenderDate()
                            },
                            new ColumnProperty(nameof(CampaignModel.Id))
                            {
                                Title = (await T("Admin.Common.Edit")).Value,
                                Width = "100",
                                ClassName = NopColumnClassDefaults.Button,
                                Render = new RenderButtonEdit(new DataUrl("Edit"))
                            }
                        }
                    })
                </div>
            </div>
        </div>
    </div>
</div>
</section>