@model CustomerModel

<div class="card-body">
    @await Html.PartialAsync("Table", new DataTablesModel
    {
        Name = "customer-addresses-grid",
        UrlRead = new DataUrl("AddressesSelect", "Customer", new RouteValueDictionary { [nameof(Model.CustomerAddressSearchModel.CustomerId)] = Model.CustomerAddressSearchModel.CustomerId }),
        UrlDelete = new DataUrl("AddressDelete", "Customer", new RouteValueDictionary { [nameof(Model.CustomerAddressSearchModel.CustomerId)] = Model.CustomerAddressSearchModel.CustomerId }),
        Length = Model.CustomerAddressSearchModel.PageSize,
        LengthMenu = Model.CustomerAddressSearchModel.AvailablePageSizes,
        ColumnCollection = new List<ColumnProperty>
        {
            new ColumnProperty(nameof(AddressModel.FirstName))
            {
                Title = (await T("Admin.Address.Fields.FirstName")).Value
            },
            new ColumnProperty(nameof(AddressModel.LastName))
            {
                Title = (await T("Admin.Address.Fields.LastName")).Value
            },
            new ColumnProperty(nameof(AddressModel.Email))
            {
                Title = (await T("Admin.Address.Fields.Email")).Value
            },
            new ColumnProperty(nameof(AddressModel.PhoneNumber))
            {
                Title = (await T("Admin.Address.Fields.PhoneNumber")).Value
            },
            new ColumnProperty(nameof(AddressModel.FaxNumber))
            {
                Title = (await T("Admin.Address.Fields.FaxNumber")).Value
            },
            new ColumnProperty(nameof(AddressModel.AddressHtml))
            {
                Title = (await T("Admin.Address")).Value,
                Encode = false
            },
            new ColumnProperty(nameof(AddressModel.Id))
            {
                Title = (await T("Admin.Common.Edit")).Value,
                Width = "100",
                ClassName =  NopColumnClassDefaults.Button,
                Render = new RenderButtonEdit(new DataUrl("~/Admin/Customer/AddressEdit?customerId=" + Model.CustomerAddressSearchModel.CustomerId + "&addressid=", true))
            },
            new ColumnProperty(nameof(AddressModel.Id))
            {
                Title = (await T("Admin.Common.Delete")).Value,
                Width = "100",
                Render = new RenderButtonRemove((await T("Admin.Common.Delete")).Value),
                ClassName =  NopColumnClassDefaults.Button
            }
        }
    })
</div>
<div class="card-body">
    <button type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("AddressCreate", new { customerId = Model.Id })'">
        @await T("Admin.Customers.Customers.Addresses.AddButton")
    </button>
</div>
