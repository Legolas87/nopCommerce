@model StoreSearchModel

@{
    //page title
    ViewBag.PageTitle = (await T("Admin.Configuration.Stores")).Value;
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("Stores");
}

<div class="content-header clearfix">
    <h1 class="float-left">
        @await T("Admin.Configuration.Stores")
    </h1>
    <div class="float-right">
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus-square"></i>
            @await T("Admin.Common.AddNew")
        </a>
        @await Component.InvokeAsync(typeof(AdminWidgetViewComponent), new { widgetZone = AdminWidgetZones.StoreListButtons, additionalData = Model })
    </div>
</div>

<section class="content">
    <div class="container-fluid">
    <div class="form-horizontal">
        <div class="cards-group">
            <div class="card card-default">
                <div class="card-body">
                    <nop-doc-reference asp-string-resource="@await T("Admin.Documentation.Reference.MultiStore", Docs.MultiStore + Utm.OnAdmin)" />

                    @await Html.PartialAsync("Table", new DataTablesModel
                    {
                        Name = "stores-grid",
                        UrlRead = new DataUrl("List", "Store", null),
                        Length = Model.PageSize,
                        LengthMenu = Model.AvailablePageSizes,
                        ColumnCollection = new List<ColumnProperty>
                        {
                            new ColumnProperty(nameof(StoreModel.Name))
                            {
                                Title = (await T("Admin.Configuration.Stores.Fields.Name")).Value
                            },
                            new ColumnProperty(nameof(StoreModel.Url))
                            {
                                Title = (await T("Admin.Configuration.Stores.Fields.Url")).Value
                            },
                            new ColumnProperty(nameof(StoreModel.DisplayOrder))
                            {
                                Title = (await T("Admin.Configuration.Stores.Fields.DisplayOrder")).Value,
                                ClassName =  NopColumnClassDefaults.CenterAll
                            },
                            new ColumnProperty(nameof(StoreModel.Id))
                            {
                                Title = (await T("Admin.Common.Edit")).Value,
                                Width = "100",
                                ClassName =  NopColumnClassDefaults.Button,
                                Render = new RenderButtonEdit(new DataUrl("Edit"))
                            }
                        }
                    })
                </div>
            </div>
        </div>
    </div>
</div>
</section>