@model ProductModel

<div class="card-body">
    <p>
        @await T("Admin.Catalog.Products.PurchasedWithOrders.Hint")
    </p>
    @{ 
        var table = new DataTablesModel
        {
            Name = "purchased-with-orders-grid",
            UrlRead = new DataUrl("PurchasedWithOrders", "Product", new RouteValueDictionary { [nameof(Model.ProductOrderSearchModel.ProductId)] = Model.ProductOrderSearchModel.ProductId }),
            Length = Model.ProductPictureSearchModel.PageSize,
            LengthMenu = Model.ProductPictureSearchModel.AvailablePageSizes
        };

        var columns = new List<ColumnProperty>();
        columns.Add(new ColumnProperty(nameof(OrderModel.CustomOrderNumber))
        {
            Title = (await T("Admin.Orders.Fields.CustomOrderNumber")).Value,
            Width = "200"
        });
        columns.Add(new ColumnProperty(nameof(OrderModel.CustomerEmail))
        {
            Title = (await T("Admin.Orders.Fields.CustomerEmail")).Value,
            Width = "200"
        });
        if (!Model.IsLoggedInAsVendor)
        {
            columns.Add(new ColumnProperty(nameof(OrderModel.OrderStatus))
            {
                Title = (await T("Admin.Orders.Fields.OrderStatus")).Value,
                Width = "100"
            });
            columns.Add(new ColumnProperty(nameof(OrderModel.PaymentStatus))
            {
                Title = (await T("Admin.Orders.Fields.PaymentStatus")).Value,
                Width = "100"
            });
            columns.Add(new ColumnProperty(nameof(OrderModel.ShippingStatus))
            {
                Title = (await T("Admin.Orders.Fields.ShippingStatus")).Value,
                Width = "100"
            });
        }
        columns.Add(new ColumnProperty(nameof(OrderModel.CreatedOn))
        {
            Title = (await T("Admin.Orders.Fields.CreatedOn")).Value,
            Width = "200",
            Render = new RenderDate(),
            ClassName = NopColumnClassDefaults.CenterAll
        });
        columns.Add(new ColumnProperty(nameof(OrderModel.Id))
        {
            Title = (await T("Admin.Common.View")).Value,
            Width = "100",
            ClassName = NopColumnClassDefaults.Button,
            Render = new RenderButtonView(new DataUrl("~/Admin/Order/Edit/"))
        });

        table.ColumnCollection = columns;
    }

    @await Html.PartialAsync("Table", table)
</div>